// generated by Fast Light User Interface Designer (fluid) version 1.0400
//
// Copyright 2017-2018 The fltkal authors
// Copyright 1998-2018 by Bill Spitzak and others.
//
//                              FLTK License
//                            December 11, 2001
// 
// The FLTK library and included programs are provided under the terms
// of the GNU Library General Public License (LGPL) with the following
// exceptions:
// 
//     1. Modifications to the FLTK configure script, config
//        header file, and makefiles by themselves to support
//        a specific platform do not constitute a modified or
//        derivative work.
// 
//       The authors do request that such modifications be
//       contributed to the FLTK project - send all contributions
//       through the "Software Trouble Report" on the following page:
//  
//            http://www.fltk.org/str.php
// 
//     2. Widgets that are subclassed from FLTK widgets do not
//        constitute a derivative work.
// 
//     3. Static linking of applications and widgets to the
//        FLTK library does not constitute a derivative work
//        and does not require the author to provide source
//        code for the application or widget, use the shared
//        FLTK libraries, or link their applications or
//        widgets against a user-supplied version of FLTK.
// 
//        If you link the application or widget to a modified
//        version of FLTK, then the changes to FLTK must be
//        provided under the terms of the LGPL in sections
//        1, 2, and 4.
// 
//     4. You do not have to provide a copy of the FLTK license
//        with programs that are linked to the FLTK library, nor
//        do you have to identify the FLTK license in your
//        program or documentation as required by section 6
//        of the LGPL.
// 
//        However, programs must still identify their use of FLTK.
//        The following example statement can be included in user
//        documentation to satisfy this requirement:
// 
//            [program/widget] is based in part on the work of
//            the FLTK project (http://www.fltk.org).
// 
//     This library is free software; you can redistribute it and/or
//     modify it under the terms of the GNU Library General Public
//     License as published by the Free Software Foundation; either
//     version 2 of the License, or (at your option) any later version.
// 
//     This library is distributed in the hope that it will be useful,
//     but WITHOUT ANY WARRANTY; without even the implied warranty of
//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//     Library General Public License for more details.
// 
//     You should have received a copy of the GNU Library General Public
//     License along with FLTK.  If not, see <http://www.gnu.org/licenses/>.
//
//

#ifndef tree_h
#define tree_h

#if 0
#include <FL/Fl.H>
#include <stdio.h>
#include <FL/Fl.H>
#include <FL/Fl_Tooltip.H>
#include <FL/Fl_Pixmap.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Tree.H>
#include <FL/fl_ask.H>
#include <FL/fl_message.H>
#include <FL/Fl_File_Chooser.H>
#include <FL/Fl_Preferences.H>
#include <FL/Fl_Color_Chooser.H>
#include <FL/Fl_Text_Display.H>
#include <FL/Fl_Simple_Terminal.H>
#else
#include <fl/fl.h>
#include <stdio.h>
#include <fl/fl.h>
#include <fl/tooltip.h>
#include <fl/imgpix.h>
#include <fl/group.h>
#include <fl/tree.h>
#include <fl/fl_ask.h>
#include <fl/message.h>
#include <fl/filech.h>
#include <fl/pref.h>
#include <fl/colorch.h>
#include <fl/textdsp.h>
#include <fl/terminal.h>
#endif

const char* reason_as_name(Fl_Tree_Reason reason);
void Button_CB(Fl_Widget*w, void*data);
void AssignUserIcons();
void RebuildTree();
Fl_Color EditColor(Fl_Color &val);
void UpdateColorChips();
int GetTreeMarginBottom();
int GetTreeWidgetMarginLeft();
Fl_Color GetSelectedItemFGColor();
Fl_Color GetSelectedItemBGColor();
#if 0
#include <FL/Fl_Double_Window.H>
#else
#include <fl/windbl.h>
// resolve window crash with conio
#undef window
#define window _window
#endif
extern Fl_Double_Window *window;
extern Fl_Tree *tree;
#if 0
#include <FL/Fl_Group.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Value_Slider.H>
#else
#include <fl/group.h>
#include <fl/box.h>
#include <fl/slvalue.h>
#endif
extern Fl_Value_Slider *margintop_slider;
extern Fl_Value_Slider *marginleft_slider;
extern Fl_Value_Slider *marginbottom_slider;
extern Fl_Value_Slider *linespacing_slider;
extern Fl_Value_Slider *usericonmarginleft_slider;
extern Fl_Value_Slider *labelmarginleft_slider;
extern Fl_Value_Slider *widgetmarginleft_slider;
extern Fl_Value_Slider *openchild_marginbottom_slider;
extern Fl_Value_Slider *connectorwidth_slider;
#if 0
#include <FL/Fl_Choice.H>
#else
#include <fl/choice.h>
#endif
extern Fl_Choice *collapseicons_chooser;
extern Fl_Choice *connectorstyle_chooser;
extern Fl_Choice *selectmode_chooser;
extern Fl_Choice *reselectmode_chooser;
extern Fl_Choice *whenmode_chooser;
#if 0
#include <FL/Fl_Check_Button.H>
#else
#include <fl/btnk.h>
#endif
extern Fl_Check_Button *usericon_radio;
extern Fl_Check_Button *showroot_radio;
extern Fl_Check_Button *visiblefocus_checkbox;
extern Fl_Check_Button *labelandwidget_radio;
extern Fl_Check_Button *itemheightfromwidget_radio;
extern Fl_Box *showitem_box;
#if 0
#include <FL/Fl_Button.H>
#else
#include <fl/btn.h>
#endif
extern Fl_Button *openall_button;
extern Fl_Button *loaddb_button;
extern Fl_Button *insertabove_button;
extern Fl_Button *rebuildtree_button;
extern Fl_Button *showpathname_button;
extern Fl_Button *closeall_button;
extern Fl_Button *clearall_button;
extern Fl_Button *testcallbackflag_button;
extern Fl_Button *testrootshowself_button;
extern Fl_Button *add20k_button;
extern Fl_Choice *selected_labelfont_choice;
extern Fl_Value_Slider *selected_labelsize_slider;
extern Fl_Button *all_labelfgcolor_button;
extern Fl_Button *all_labelbgcolor_button;
#if 0
#include <FL/Fl_Light_Button.H>
#else
#include <fl/btnlt.h>
#endif
extern Fl_Light_Button *deactivate_items_toggle;
extern Fl_Light_Button *deactivate_tree_toggle;
extern Fl_Light_Button *bold_toggle;
extern Fl_Button *showselected_button;
extern Fl_Button *clearselected_button;
extern Fl_Button *swapselected_button;
extern Fl_Button *selectall_button;
extern Fl_Button *deselectall_button;
extern Fl_Button *nextselected_button;
extern Fl_Light_Button *bbbselect_toggle;
extern Fl_Light_Button *bbbselect2_toggle;
extern Fl_Light_Button *bbbchild02select_toggle;
extern Fl_Light_Button *rootselect_toggle;
extern Fl_Light_Button *rootselect2_toggle;
extern Fl_Choice *labelfont_choice;
extern Fl_Value_Slider *labelsize_slider;
extern Fl_Choice *item_labelfont_choice;
extern Fl_Value_Slider *item_labelsize_slider;
extern Fl_Button *labelcolor_button;
extern Fl_Button *color_button;
extern Fl_Button *selection_color_button;
extern Fl_Button *item_labelfgcolor_button;
extern Fl_Button *item_labelbgcolor_button;
extern Fl_Button *x_item_labelbgcolor_button;
extern Fl_Button *testsuggs_button;
extern Fl_Value_Slider *tree_scrollbar_size_slider;
extern Fl_Value_Slider *scrollbar_size_slider;
extern Fl_Box *resizer_box;
extern Fl_Simple_Terminal *tty;
extern Fl_Menu_Item menu_collapseicons_chooser[];
extern Fl_Menu_Item menu_connectorstyle_chooser[];
extern Fl_Menu_Item menu_selectmode_chooser[];
extern Fl_Menu_Item menu_reselectmode_chooser[];
extern Fl_Menu_Item menu_whenmode_chooser[];
extern Fl_Menu_Item menu_selected_labelfont_choice[];
extern Fl_Menu_Item menu_labelfont_choice[];
extern Fl_Menu_Item menu_item_labelfont_choice[];
#endif
